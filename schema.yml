openapi: 3.0.3
info:
  title: Make Yourself
  version: 0.2.0
  description: Website for self-education and self-study
paths:
  /blog/categories/:
    get:
      operationId: blog_categories_list
      description: View for list all category of blog
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /blog/comments/:
    get:
      operationId: blog_comments_list
      description: View for manage comments of blog's posts
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: blog_comments_create
      description: View for manage comments of blog's posts
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /blog/comments/{id}/:
    get:
      operationId: blog_comments_retrieve
      description: View for manage comments of blog's posts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: blog_comments_update
      description: View for manage comments of blog's posts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: blog_comments_partial_update
      description: View for manage comments of blog's posts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: blog_comments_destroy
      description: View for manage comments of blog's posts
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /blog/comments/{id}/like/:
    post:
      operationId: blog_comments_like_create
      description: Manage obj's like
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: blog_comments_like_destroy
      description: Manage obj's like
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Комментарий.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /blog/posts/:
    get:
      operationId: blog_posts_list
      description: View for manage posts of blog
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: blog_posts_create
      description: View for manage posts of blog
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /blog/posts/{id}/:
    get:
      operationId: blog_posts_retrieve
      description: View for manage posts of blog
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: blog_posts_update
      description: View for manage posts of blog
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: blog_posts_partial_update
      description: View for manage posts of blog
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: blog_posts_destroy
      description: View for manage posts of blog
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /blog/posts/{id}/like/:
    post:
      operationId: blog_posts_like_create
      description: Manage obj's like
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: blog_posts_like_destroy
      description: Manage obj's like
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пост.
        required: true
      tags:
      - blog
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Category:
      type: object
      description: Serializer for Category model
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        title:
          type: string
          title: Категория
          maxLength: 255
      required:
      - id
      - slug
      - title
    Comment:
      type: object
      description: Serializer for Comment model
      properties:
        id:
          type: integer
          readOnly: true
        is_fan:
          type: boolean
          description: Check if user add like to post  or not.
          readOnly: true
        content:
          type: string
          title: Содержание
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        author:
          type: integer
          title: Автор
        post:
          type: integer
      required:
      - author
      - content
      - creation_date
      - id
      - is_fan
      - post
    PatchedComment:
      type: object
      description: Serializer for Comment model
      properties:
        id:
          type: integer
          readOnly: true
        is_fan:
          type: boolean
          description: Check if user add like to post  or not.
          readOnly: true
        content:
          type: string
          title: Содержание
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        author:
          type: integer
          title: Автор
        post:
          type: integer
    PatchedPost:
      type: object
      description: Serializer for Post model
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        published:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        author:
          type: integer
          title: Автор
        title:
          type: string
          title: Заголовок
          maxLength: 255
        content:
          type: string
          title: Содержание
        publish_date:
          type: string
          format: date-time
          nullable: true
          title: Дата публикации
        is_fan:
          type: boolean
          description: Check if user add like to post  or not.
          readOnly: true
    Post:
      type: object
      description: Serializer for Post model
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        published:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        author:
          type: integer
          title: Автор
        title:
          type: string
          title: Заголовок
          maxLength: 255
        content:
          type: string
          title: Содержание
        publish_date:
          type: string
          format: date-time
          nullable: true
          title: Дата публикации
        is_fan:
          type: boolean
          description: Check if user add like to post  or not.
          readOnly: true
      required:
      - author
      - content
      - creation_date
      - id
      - is_fan
      - published
      - slug
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
